初探小电商 - 大练习 

目标：结合django + ajax 独立完成 一个 迷你电商平台

功能如下：

​		    1，注册用户

​			2，登录用户

​			3，**上架商品**

​			4，**展示商品**



### 前期准备

创建Django项目 名为 fruit， 添加应用index

前端提供页面及图片  详情见压缩包

### 用户表

index.models 中创建User类

```python
字段如下：
uphone   varchar   max_length 11  手机号【登陆时输入手机号】
upwd     varchar   max_length 32  密码【密文md5】
uname    varchar   max_length 20  用户名
uemail   使用Django Email字段	   邮箱
isActive 使用Django BooleanField字段  是否激活 True为激活

修改表名为 User
```

功能需求如下：

1，根据前端登陆页面 修改成注册页面 样式如下：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191031165239497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JlYWxseVBBTkc=,size_16,color_FFFFFF,t_70)
2，完善注册整体流程：

```
1，手机号重复性验证(ajax) blur/submit
	如果手机未注册，提示ok,  提交摁钮可以点击
	如果当前手机号已注册，提示no；且用户无法点击
	提交摁钮提交
2, 可进行有效注册，密码以md5形式存储;注册成功后 免登陆1天
```

3，完善登陆流程：

页面效果如下：
![在这里插入图片描述](https://img-blog.csdnimg.cn/20191031165405723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JlYWxseVBBTkc=,size_16,color_FFFFFF,t_70)
```python
	1，可进行有效登陆;登陆后保持登陆状态1天
    2，用户勾选 “保存密码” 则保持登陆状态30天
    3，登陆成功后，将用户返回至原路径【即从哪个页面点进来，回到哪个页面】
	4，首页通过ajax请求检查登陆状态
    	有登陆用户，首页 登录和注册位置显示
			欢迎 xxx , 退出
		没有登录用户，则显示[登录] [注册，有惊喜]
			并且能跳转到相应页面
```

需求4  具体显示位置如下图：

![在这里插入图片描述](https://img-blog.csdnimg.cn/20191031165426494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JlYWxseVBBTkc=,size_16,color_FFFFFF,t_70)
### 商品表

index.models 中创建GoodsType类 - 商品类型

```python
字段如下
title varchar max_length 20  品类名
desc  varchar max_length 200 品类描述

修改表名为 goods_type
```

index.models 中创建Goods类 - 商品

```python
title varchar  max_length 40 商品名称
price Decimal  7总长，小数点2位  价格
spec  varchar  max_length 20 规格 【500g】
picture models.ImageField(upload_to='static/upload/goods', verbose_name='商品图片')
goodsType  外键  关联GoodsType
isActive Django BooleanField  是否上架  True为上架

修改表名为 商品
```

功能需求如下：

1，admin后台可添加商品，两个品类，各10个数据

2，首页通过ajax加载商品，每个品类最多显示最近发布的前10个商品，按页面样式显示 商品名称/价格/规格/商品图片
